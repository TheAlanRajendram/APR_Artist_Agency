---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="Services">
  <section class="py-10 relative">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl font-bold mb-8 text-center font-serif">Our Services</h1>

      <div class="service-gallery">
        <div class="service-card" data-index="0">
          <div class="card-content bg-dark-lighter p-8 rounded-lg">
            <h2 class="text-2xl font-bold mb-4 text-gold font-serif">Talent Matching</h2>
            <p class="text-gray-300 mb-4">
              We carefully analyze your brand's values, target audience, and campaign goals to identify the perfect artist match. Our extensive network includes:
            </p>
            <ul class="list-disc list-inside space-y-2 text-gray-300">
              <li>Professional Athletes</li>
              <li>Recording Artists</li>
              <li>Actors & Entertainers</li>
              <li>Influencers & Content Creators</li>
            </ul>
          </div>
        </div>

        <div class="service-card" data-index="1">
          <div class="card-content bg-dark-lighter p-8 rounded-lg">
            <h2 class="text-2xl font-bold mb-4 text-gold font-serif">Campaign Strategy</h2>
            <p class="text-gray-300 mb-4">
              Our team develops comprehensive campaign strategies that maximize the impact of brand-artist collaborations:
            </p>
            <ul class="list-disc list-inside space-y-2 text-gray-300">
              <li>Multi-channel campaign planning</li>
              <li>Content strategy development</li>
              <li>Social media integration</li>
              <li>Event planning and execution</li>
            </ul>
          </div>
        </div>

        <div class="service-card" data-index="2">
          <div class="card-content bg-dark-lighter p-8 rounded-lg">
            <h2 class="text-2xl font-bold mb-4 text-gold font-serif">Contract Negotiation</h2>
            <p class="text-gray-300 mb-4">
              We handle all aspects of contract negotiation to ensure fair and beneficial agreements for all parties:
            </p>
            <ul class="list-disc list-inside space-y-2 text-gray-300">
              <li>Terms and conditions</li>
              <li>Compensation structure</li>
              <li>Usage rights and licensing</li>
              <li>Exclusivity agreements</li>
            </ul>
          </div>
        </div>

        <div class="service-card" data-index="3">
          <div class="card-content bg-dark-lighter p-8 rounded-lg">
            <h2 class="text-2xl font-bold mb-4 text-gold font-serif">Partnership Management</h2>
            <p class="text-gray-300 mb-4">
              Our comprehensive partnership management ensures smooth collaboration throughout the campaign:
            </p>
            <ul class="list-disc list-inside space-y-2 text-gray-300">
              <li>Ongoing communication</li>
              <li>Performance tracking</li>
              <li>Content approval process</li>
              <li>Relationship maintenance</li>
            </ul>
          </div>
        </div>

        <div class="service-card" data-index="4">
          <div class="card-content bg-dark-lighter p-8 rounded-lg">
            <h2 class="text-2xl font-bold mb-4 text-gold font-serif">Brand Strategy</h2>
            <p class="text-gray-300 mb-4">
              We help brands develop and execute strategies that align with their values and goals:
            </p>
            <ul class="list-disc list-inside space-y-2 text-gray-300">
              <li>Brand positioning</li>
              <li>Target audience analysis</li>
              <li>Competitive research</li>
              <li>Long-term planning</li>
            </ul>
          </div>
        </div>

        <div class="service-card" data-index="5">
          <div class="card-content bg-dark-lighter p-8 rounded-lg">
            <h2 class="text-2xl font-bold mb-4 text-gold font-serif">Artist Development</h2>
            <p class="text-gray-300 mb-4">
              We support artists in building and maintaining their brand partnerships:
            </p>
            <ul class="list-disc list-inside space-y-2 text-gray-300">
              <li>Brand alignment guidance</li>
              <li>Partnership opportunities</li>
              <li>Contract review</li>
              <li>Career strategy</li>
            </ul>
          </div>
        </div>
      </div>

      <div class="progress-bar">
        <div class="progress-indicator"></div>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .service-gallery {
    height: 500px;
    position: relative;
    width: 100%;
    perspective: 1000px;
    overflow: hidden;
    padding: 40px 0;
  }

  .service-card {
    position: absolute;
    width: 90%;
    max-width: 600px;
    height: auto;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) scale(0.6) translateX(0);
    transition: transform 0.8s cubic-bezier(0.25, 1, 0.35, 1);
    transform-style: preserve-3d;
    opacity: 0;
    visibility: hidden;
    z-index: 1;
  }

  .service-card.active {
    z-index: 5;
    opacity: 1;
    visibility: visible;
  }

  .card-content {
    backface-visibility: hidden;
    transform: translateZ(0);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  /* Progress bar */
  .progress-bar {
    width: 100%;
    max-width: 300px;
    height: 4px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
    margin: 20px auto 10px;
    overflow: hidden;
  }

  .progress-indicator {
    height: 100%;
    width: 0%;
    background-color: #D4AF37;
    transition: width 0.3s ease;
  }

  @media (prefers-reduced-motion: reduce) {
    .service-card {
      transition: opacity 0.5s ease;
    }
  }

  @media (max-width: 768px) {
    .service-gallery {
      height: 450px;
      padding: 30px 0;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.service-card');
    const totalCards = cards.length;
    const progressIndicator = document.querySelector('.progress-indicator') as HTMLElement;
    let currentIndex = 0;
    let targetIndex = 0;
    let isScrolling = false;
    let touchStartX = 0;
    let lastScrollTime = 0;
    const scrollCooldown = 800; // ms
    let prevButton: HTMLButtonElement;
    let nextButton: HTMLButtonElement;

    function updateCardPositions() {
      const progress = (targetIndex / (totalCards - 1)) * 100;
      if (progressIndicator) {
        progressIndicator.style.width = `${progress}%`;
      }

      // Update navigation button visibility
      if (prevButton && nextButton) {
        prevButton.style.visibility = targetIndex === 0 ? 'hidden' : 'visible';
        nextButton.style.visibility = targetIndex === totalCards - 1 ? 'hidden' : 'visible';
      }

      cards.forEach((card, index) => {
        const distance = index - targetIndex;
        const cardElement = card as HTMLElement;

        if (Math.abs(distance) > 2) {
          // Cards too far from the active one are hidden
          card.classList.remove('active');
          cardElement.style.transform = `translate(-50%, -50%) scale(0.6) translateX(${distance * 100}%)`;
          return;
        }

        // Calculate z-index
        const zIndex = 5 - Math.abs(distance);
        cardElement.style.zIndex = zIndex.toString();

        // Calculate opacity
        let opacity = 1 - (Math.abs(distance) * 0.3);
        opacity = Math.max(0, Math.min(1, opacity));

        // Calculate scale
        let scale = 1 - (Math.abs(distance) * 0.2);
        scale = Math.max(0.6, Math.min(1, scale));

        // Calculate X position
        const translateX = distance * 100;

        // Apply transformations
        card.classList.add('active');
        cardElement.style.transform = `translate(-50%, -50%) scale(${scale}) translateX(${translateX}%)`;
        cardElement.style.opacity = opacity.toString();
      });
    }

    function navigateToCard(index) {
      const now = Date.now();
      if (now - lastScrollTime < scrollCooldown) return;

      lastScrollTime = now;
      targetIndex = Math.max(0, Math.min(totalCards - 1, index));
      updateCardPositions();
    }

    // Initial setup
    updateCardPositions();
    navigateToCard(0);

    // Mouse wheel event
    window.addEventListener('wheel', (e) => {
      if (e.deltaX > 0 || e.deltaY > 0) {
        navigateToCard(targetIndex + 1);
      } else {
        navigateToCard(targetIndex - 1);
      }
    });

    // Touch events for mobile
    window.addEventListener('touchstart', (e) => {
      touchStartX = e.touches[0].clientX;
    });

    window.addEventListener('touchend', (e) => {
      const touchEndX = e.changedTouches[0].clientX;
      const deltaX = touchStartX - touchEndX;

      if (Math.abs(deltaX) > 50) {
        if (deltaX > 0) {
          navigateToCard(targetIndex + 1);
        } else {
          navigateToCard(targetIndex - 1);
        }
      }
    });

    // Keyboard navigation
    window.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowRight') {
        navigateToCard(targetIndex + 1);
      } else if (e.key === 'ArrowLeft') {
        navigateToCard(targetIndex - 1);
      }
    });

    // Add navigation buttons for better UX
    const gallery = document.querySelector('.service-gallery');
    if (gallery) {
      prevButton = document.createElement('button');
      prevButton.className = 'nav-button prev-button';
      prevButton.innerHTML = '&lt;';
      prevButton.onclick = () => navigateToCard(targetIndex - 1);

      nextButton = document.createElement('button');
      nextButton.className = 'nav-button next-button';
      nextButton.innerHTML = '&gt;';
      nextButton.onclick = () => navigateToCard(targetIndex + 1);

      gallery.appendChild(prevButton);
      gallery.appendChild(nextButton);

      // Initialize button visibility
      prevButton.style.visibility = 'hidden'; // Hide left arrow at start
    }
  });

  // Add nav button styles
  document.head.insertAdjacentHTML('beforeend', `
    <style>
      .nav-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
        background: rgba(0,0,0,0.5);
        color: white;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        font-size: 18px;
        cursor: pointer;
        transition: background 0.3s;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .nav-button:hover {
        background: rgba(0,0,0,0.8);
      }

      .prev-button {
        left: 10px;
      }

      .next-button {
        right: 10px;
      }

      @media (max-width: 640px) {
        .nav-button {
          width: 32px;
          height: 32px;
          font-size: 14px;
        }
      }
    </style>
  `);
</script>
