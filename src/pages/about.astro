---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { marked } from "marked";
import fs from "node:fs";
import path from "node:path";
import LazyImage from "../components/LazyImage.astro";

// Get all about sections and sort by order
const aboutSections = await getCollection("about");
const sortedSectionsData = aboutSections.sort(
  (a, b) => a.data.order - b.data.order
);

// Convert markdown to HTML for proper rendering
const sortedSections = await Promise.all(
  sortedSectionsData.map(async (section) => {
    const compiledContent = await marked.parse(section.body);
    return {
      ...section,
      compiledContent,
    };
  })
);

// Base URL for assets (now using root paths)

// Get all logo files from the directory
const logoDir = path.join(process.cwd(), "public", "logos");
let logoFiles: string[] = [];

try {
  if (fs.existsSync(logoDir)) {
    logoFiles = fs
      .readdirSync(logoDir)
      .filter((file) => !file.startsWith(".") && file !== "README.md")
      .filter((file) => /\.(svg|png|jpg|jpeg)$/i.test(file));
  }
} catch (error) {
  console.error("Error reading logo directory:", error);
}

// Convert logo filename to a display name
function getDisplayName(filename) {
  const nameWithoutExt = filename.split(".")[0];
  return nameWithoutExt
    .split("-")
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(" ");
}
---

<BaseLayout title="About">
  <!-- Hero Section -->
  <section class="relative py-20 md:py-36 bg-dark overflow-hidden">
    <!-- Background Video -->
    <div class="absolute inset-0 z-0">
      <video
        autoplay
        muted
        loop
        playsinline
        preload="auto"
        class="w-full h-full object-cover opacity-20"
        style="background: #000;"
      >
        <source src="/videos/hero_page.mp4" type="video/mp4" />
        Your browser does not support the video tag.
      </video>
      <div class="absolute inset-0 bg-dark/60"></div>
    </div>

    <div class="relative z-10 container mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-5xl font-bold font-serif mb-6">
        <span class="text-gold italic">APR ARTIST AGENCY</span>
      </h1>
      <p class="text-lg text-secondary opacity-90 mb-8 max-w-2xl mx-auto">
        PR, Brand Partnership & Talent Management for Global Talents within Music, Sports and Entertainment
      </p>
    </div>
  </section>

  <!-- About Sections -->
  {
    sortedSections.map((section, index) => (
      section.data.title === "Founder" ? (
        <!-- Founder Section -->
        <section class="py-16 bg-dark-lighter fade-in-element">
          <div class="container mx-auto px-4">
            <div class="max-w-6xl mx-auto">
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-16 items-center">
                <!-- Image -->
                <div class="flex flex-col items-center">
                  <div class="w-80 h-80 rounded-full overflow-hidden shadow-lg mb-6">
                    <LazyImage
                      src={section.data.image}
                      alt="Priyanka Rajendram - Founder & CEO"
                      class="w-full h-full object-cover"
                    />
                  </div>
                  <!-- Founder info under image -->
                  <div class="text-center">
                    <p class="font-bold text-heading-secondary text-xl mb-2">Priyanka Rajendram</p>
                    <p class="text-primary font-medium text-lg">Founder & CEO</p>
                  </div>
                </div>

                <!-- Content -->
                <div>
                  <h2 class="text-3xl md:text-4xl font-bold mb-6 font-serif text-gold">
                    {section.data.title}
                  </h2>

                  <div
                    class="space-y-6 text-secondary leading-relaxed text-lg"
                    set:html={section.compiledContent}
                  />
                </div>
              </div>
            </div>
          </div>
        </section>
      ) : (
        <!-- Regular About Section -->
        <section class={`py-16 ${index % 2 === 0 ? 'bg-dark-lighter' : 'bg-dark'} fade-in-element`}>
          <div class="container mx-auto px-4">
            <div class="max-w-6xl mx-auto">
              <div class={`grid grid-cols-1 lg:grid-cols-2 gap-16 items-center ${index % 2 === 0 ? '' : 'lg:grid-flow-col-dense'}`}>
                <!-- Content -->
                <div class={index % 2 === 0 ? 'lg:order-1' : 'lg:order-2'}>
                  <h2 class="text-3xl md:text-4xl font-bold mb-6 font-serif text-gold">
                    {section.data.title}
                  </h2>
                  <div
                    class="text-secondary leading-relaxed text-lg"
                    set:html={section.compiledContent}
                  />
                </div>

                <!-- Image -->
                <div class={index % 2 === 0 ? 'lg:order-2' : 'lg:order-1'}>
                  <div class="aspect-[4/3] rounded-lg overflow-hidden">
                    <LazyImage
                      src={section.data.image}
                      alt={`${section.data.title} visual representation`}
                      class="w-full h-full object-cover"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      )
    ))
  }

  <!-- Strategic Partnership Section -->
  <section class="py-16 bg-dark-accent fade-in-element">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-8 font-serif text-gold">
          Strategic Partnership with GTMG
        </h2>
        <p class="text-secondary leading-relaxed text-lg">
          We collaborate closely with Golden Talent Management Group (GTMG), bringing together over 18 years of expertise in talent representation and personal brand development. This strategic partnership allows us to leverage combined strengths in connecting talents and brands, delivering exceptional value through our complementary services in talent management and brand partnerships.
        </p>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: theme("textColor.gold");
  }

  .prose p {
    color: theme("textColor.secondary");
  }

  .prose ul li {
    color: theme("textColor.secondary");
  }

  .prose strong {
    color: theme("textColor.gold");
    font-weight: 600;
  }

  /* Fade-in animations */
  .fade-in-element {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  }

  .fade-in-element.fade-in-visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Staggered animations for grid items */
  .fade-in-stagger > * {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .fade-in-stagger.fade-in-visible > * {
    opacity: 1;
    transform: translateY(0);
  }

  /* Delay classes for staggered effect */
  .fade-in-stagger.fade-in-visible > *:nth-child(1) { transition-delay: 0.1s; }
  .fade-in-stagger.fade-in-visible > *:nth-child(2) { transition-delay: 0.2s; }
  .fade-in-stagger.fade-in-visible > *:nth-child(3) { transition-delay: 0.3s; }
  .fade-in-stagger.fade-in-visible > *:nth-child(4) { transition-delay: 0.4s; }
  .fade-in-stagger.fade-in-visible > *:nth-child(5) { transition-delay: 0.5s; }
  .fade-in-stagger.fade-in-visible > *:nth-child(6) { transition-delay: 0.6s; }
</style>

<script>
  // Declare global variable
  let fadeInObserver;

    // Initialize fade-in animations
  function initializeFadeInAnimations() {
    // Clean up any existing observers
    if (fadeInObserver) {
      fadeInObserver.disconnect();
    }

    // Initialize hero video
    initializeHeroVideo();

    // Intersection Observer for fade-in animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    fadeInObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('fade-in-visible');
          fadeInObserver.unobserve(entry.target);
        }
      });
    }, observerOptions);

    // Reset all elements and observe them
    const fadeElements = document.querySelectorAll('.fade-in-element');
    fadeElements.forEach((element) => {
      element.classList.remove('fade-in-visible');
      fadeInObserver.observe(element);
    });

        // Add stagger effect to grid containers (if any exist on this page)
    const gridContainers = document.querySelectorAll('.grid');
    gridContainers.forEach(grid => {
      if (grid.children.length > 3) { // Only apply stagger to grids with multiple items
        grid.classList.remove('fade-in-visible');
        grid.classList.add('fade-in-stagger');
        fadeInObserver.observe(grid);
      }
    });
  }

    // Initialize hero video
  function initializeHeroVideo() {
    const heroVideo = document.querySelector('section video') as HTMLVideoElement;
    if (heroVideo) {
      // Force video to load and play
      heroVideo.load();

      // Attempt to play the video
      const playPromise = heroVideo.play();
      if (playPromise !== undefined) {
        playPromise.catch(error => {
          // Auto-play was prevented, which is fine for background videos
          console.log('Video autoplay prevented:', error);
        });
      }
    }
  }

  // Initialize on page load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeFadeInAnimations);
  } else {
    initializeFadeInAnimations();
  }

  // Re-initialize on client-side navigation (for Astro view transitions)
  document.addEventListener('astro:page-load', initializeFadeInAnimations);

  // Fallback for other navigation events
  window.addEventListener('load', initializeFadeInAnimations);
</script>
