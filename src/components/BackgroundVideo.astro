---
interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
const base = import.meta.env.BASE_URL;
---

<div class={`background-video-container ${className}`}>
  <div class="video-area">
    <video
      id="background-video"
      autoplay
      muted
      loop
      playsinline
      preload="auto"
      disablepictureinpicture
      class="background-video"
    >
      <source src={`${base}/videos/hero_page.mp4`} type="video/mp4" />
      Your browser does not support the video tag.
    </video>
  </div>
  <div class="content-area">
    <slot />
  </div>
</div>

<style>
  .background-video-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    overflow: hidden;
    display: flex; /* Default to flex for layout management */
    flex-direction: column; /* Default to column for portrait (video full, content below/hidden) */
    background-color: theme("colors.dark.DEFAULT"); /* Fallback background */
  }

  .video-area {
    position: relative; /* For positioning the video within */
    width: 100%;
    height: 100%; /* Takes full height in portrait, or height of container in landscape row */
    display: flex; /* To help manage the video element if needed */
    justify-content: center;
    align-items: center;
  }

  .background-video {
    position: absolute; /* Positioned within video-area */
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    object-fit: cover; /* Cover the video-area */
    object-position: top center;
    opacity: 0.9;
    filter: brightness(0.5) contrast(1.1);
    pointer-events: none;
    /* z-index is not strictly necessary here if it's the only child of video-area filling it */
  }

  .content-area {
    display: none; /* Hidden by default (for portrait) */
    /* Styling for landscape will be in the media query */
    position: relative; /* Ensure it's part of the flex flow correctly */
    z-index: 5; /* Ensure content is above video if any overlap scenarios develop */
  }

  @media (orientation: landscape) {
    .background-video-container {
      flex-direction: row-reverse; /* Video on the right, content on the left */
    }

    .video-area {
      flex: 0 0 60%; /* Video takes 60% of the width, doesn't grow or shrink */
      height: 100%; /* Full height of the container */
    }
    /* .background-video continues to cover its .video-area */

    .content-area {
      display: flex; /* Make it visible and use flex for content alignment */
      flex-direction: column;
      justify-content: center; /* Center content vertically */
      align-items: center; /* Center content horizontally */
      flex: 1 1 40%; /* Takes the remaining 40%, can grow/shrink */
      height: 100%;
      padding: 2rem; /* Add some padding for the text */
      color: #fff; /* Example text color, adjust as needed */
      /* background-color: rgba(0,0,0,0.3); Optional: slight background for readability */
    }
  }
</style>

<script>
  // Function to ensure the background video plays
  function initBackgroundVideo() {
    const video = document.getElementById(
      "background-video"
    ) as HTMLVideoElement;

    if (video) {
      // Try to play the video automatically
      const playPromise = video.play();

      if (playPromise !== undefined) {
        playPromise.catch((error) => {
          console.warn(
            "Auto-play was prevented. Muting video and trying again.",
            error
          );
          video.muted = true;
          video
            .play()
            .catch((e) => console.error("Still cannot play video:", e));
        });
      }

      // Reload video if it stalls
      video.addEventListener("stalled", () => {
        console.warn("Video stalled. Attempting to reload.");
        video.load();
        video
          .play()
          .catch((e) => console.error("Error playing video after stall:", e));
      });
    }
  }

  // Initialize on both DOMContentLoaded and astro:page-load to handle both initial load and transitions
  document.addEventListener("DOMContentLoaded", initBackgroundVideo);
  document.addEventListener("astro:page-load", initBackgroundVideo);
</script>
