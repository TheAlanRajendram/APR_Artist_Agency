---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { marked } from "marked";

// Helper function to create URL-friendly slugs
function slugify(text) {
  if (!text) return "";
  return text.toString().toLowerCase().trim()
    .replace(/\s+/g, "-").replace(/[^\w-]+/g, "")
    .replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
}

const services = await getCollection("services");
const sortedServices = services.sort((a, b) => a.data.order - b.data.order);

sortedServices.forEach((service) => {
  service.data.id = slugify(service.data.title);
  service.compiledContent = marked.parse(service.body);
});
---

<BaseLayout title="Services">
  <div class="services-page bg-black text-white">
    <div class="hero-section py-16 md:py-16 bg-gradient-to-b from-neutral-900 to-black">
      <div class="container mx-auto px-4 text-center">
        <h1 class="text-4xl md:text-6xl font-serif text-gold mb-6 animate-fade-in">Our Services</h1>
        <p class="text-lg md:text-xl text-gray-300 max-w-3xl mx-auto animate-fade-in animation-delay-200">
          From sponsorship and brand partnerships to marketing strategy and public relations,
          we deliver comprehensive solutions tailored to elevate your brand in the entertainment industry.
        </p>
      </div>
    </div>

    <div class="container mx-auto px-4">
      <div class="accordion-container max-w-4xl mx-auto">
        {sortedServices.map((service, index) => {
          // Generate appropriate icon based on service type
          let serviceIcon;
          if (service.data.title === "Sponsorship") {
            serviceIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
          } else if (service.data.title === "Brand Partnership") {
            serviceIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122" /></svg>`;
          } else if (service.data.title === "Properties / Locations") {
            serviceIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" /></svg>`;
          } else if (service.data.title === "Marketing Strategy") {
            serviceIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" /></svg>`;
          } else if (service.data.title === "Public Relations") {
            serviceIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z" /></svg>`;
          } else {
            serviceIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" /></svg>`;
          }

          return (
            <div class="accordion-item overflow-hidden shadow-md opacity-0 translate-y-8 animation-item"
                 id={service.data.id}
                 style={`animation-delay: ${index * 150}ms`}>
              <div class="accordion-header flex justify-between items-center p-6 bg-neutral-900 cursor-pointer border-l-4 border-transparent hover:border-gold/80" data-accordion-id={service.data.id}>
                <h2 class="text-2xl font-serif flex items-center">
                  <span class="service-icon text-gold" set:html={serviceIcon} />
                  {service.data.title}
                </h2>
                <div class="accordion-icon">
                  {index === 0 ? (
                    <svg class="w-6 h-6 text-gold transform rotate-90" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  ) : (
                    <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  )}
                </div>
              </div>
              <div class="accordion-content overflow-hidden transition-all duration-300 max-h-0" data-content-id={service.data.id}>
                <div class="p-6 bg-neutral-800">
                  {service.data.image && (
                    <div class="service-image-container mb-8">
                      <img src={service.data.image} alt={service.data.title} class="w-full rounded-md object-cover h-48 md:h-64" />
                    </div>
                  )}
                  <div class="prose prose-invert prose-lg max-w-none" set:html={service.compiledContent} />
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  .accordion-header {
    transition: all 0.3s ease;
  }

  .accordion-header.active {
    border-left-color: theme('colors.gold');
    background-color: #262626; /* neutral-800 */
  }

  .accordion-icon {
    transition: transform 0.3s ease;
  }

  .accordion-header.active .accordion-icon {
    transform: rotate(90deg);
  }

  .accordion-header.active .accordion-icon svg {
    color: theme('colors.gold');
  }

  .accordion-content {
    max-height: 0;
    opacity: 0;
    transition: all 0.5s ease;
  }

  .accordion-content.active {
    max-height: 2000px; /* Large enough to contain content */
    opacity: 1;
  }

  .service-image-container {
    transition: all 0.5s ease;
    transform: translateY(20px);
    opacity: 0;
  }

  .accordion-content.active .service-image-container {
    transform: translateY(0);
    opacity: 1;
    transition-delay: 0.2s;
  }

  .service-icon svg {
    fill: none;
    transition: all 0.3s ease;
  }

  .accordion-header.active .service-icon svg {
    color: theme('colors.gold');
  }

  /* Animation classes */
  .animation-item {
    animation: fadeUp 0.8s ease forwards;
  }

  .animate-fade-in {
    opacity: 0;
    animation: fadeIn 1s ease forwards;
  }

  .animation-delay-200 {
    animation-delay: 200ms;
  }

  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  /* Restore prose headings styling */
  .prose h3 {
    color: theme('colors.gold');
    margin-top: 1.5rem;
    margin-bottom: 1rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const accordionHeaders = document.querySelectorAll('.accordion-header');

    // Open first accordion by default
    const firstHeader = document.querySelector('.accordion-header');
    const firstContent = document.querySelector('.accordion-content');
    if (firstHeader && firstContent) {
      firstHeader.classList.add('active');
      firstContent.classList.add('active');
    }

    accordionHeaders.forEach(header => {
      header.addEventListener('click', () => {
        const accordionId = header.getAttribute('data-accordion-id');
        const content = document.querySelector(`.accordion-content[data-content-id="${accordionId}"]`);

        // Toggle active state for clicked accordion
        const isActive = header.classList.contains('active');

        // Close all accordions first
        accordionHeaders.forEach(h => h.classList.remove('active'));
        document.querySelectorAll('.accordion-content').forEach(c => c.classList.remove('active'));

        // If it wasn't active before, make it active now
        if (!isActive) {
          header.classList.add('active');
          content?.classList.add('active');

          // Scroll to the header if it's not fully visible
          setTimeout(() => {
            const headerRect = header.getBoundingClientRect();
            const isVisible = headerRect.top >= 0 && headerRect.bottom <= window.innerHeight;

            if (!isVisible) {
              header.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
          }, 100);
        }
      });
    });

    // Check for hash in URL and open that accordion
    if (window.location.hash) {
      const id = window.location.hash.substring(1);
      const header = document.querySelector(`.accordion-header[data-accordion-id="${id}"]`);
      const content = document.querySelector(`.accordion-content[data-content-id="${id}"]`);

      if (header && content) {
        // Close all accordions first
        accordionHeaders.forEach(h => h.classList.remove('active'));
        document.querySelectorAll('.accordion-content').forEach(c => c.classList.remove('active'));

        // Open the one matching the hash
        header.classList.add('active');
        content.classList.add('active');

        // Scroll to it
        setTimeout(() => {
          header.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }, 300);
      }
    }
  });
</script>
